// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DEV_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id           String           @id @default(uuid())
  username     String
  email        String           @unique
  savedPosts   UserPostSaved[]
  savedStories UserStorySaved[]
}

model UserPostSaved {
  liked     Boolean
  favorited Boolean
  readLater Boolean
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  post      Post    @relation(fields: [postId], references: [id])
  postId    String

  @@unique([userId, postId])
}

model Post {
  id            String          @id
  title         String          @db.LongText
  created       DateTime
  score         Int
  author        String
  permalink     String
  stories       Story[]
  userPostSaved UserPostSaved[]
}

model UserStorySaved {
  liked     Boolean
  favorited Boolean
  readLater Boolean
  story     Story   @relation(fields: [storyId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  storyId   String
  userId    String

  @@unique([userId, storyId])
}

model Story {
  id             String           @id
  body           String           @db.LongText
  bodyHtml       String           @db.LongText
  permalink      String
  score          Int
  author         String
  created        DateTime
  Post           Post?            @relation(fields: [postId], references: [id])
  postId         String?
  userStorySaved UserStorySaved[]
  replies        Reply[]

  @@index([postId])
}

model Reply {
  id            String   @id
  body          String   @db.LongText
  bodyHtml      String   @db.LongText
  author        String
  score         Int
  created       DateTime
  parentComment Story?   @relation(fields: [storyId], references: [id])
  storyId       String?

  replies Reply[] @relation("replies")
  Reply   Reply?  @relation(name: "replies", fields: [replyId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replyId String?
}
